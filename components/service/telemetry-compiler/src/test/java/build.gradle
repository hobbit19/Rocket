apply plugin: 'java'

sourceSets {
    test {
        output.resourcesDir = "build/classes/java/test"
    }
}

// This special test only submodule exists because adding the :glide dependency seems to break
// the annotation processor dependency chain for the internal sample apps. It's also somewhat
// easier to parse as a separate module given the existing complexity here and in the compiler
dependencies {
    // build.gradle file.
    testImplementation project(':telemetry-compiler')
    testImplementation project(':telemetry-annotation')
    testImplementation "junit:junit:${Versions.junit}"

    testImplementation 'com.google.testing.compile:compile-testing:0.15'
    // Use a stupidly old version of the Android classes jar. This works because we just need to get
    // our generated classes to compile and our generated classes tend to use simple and stable
    // Android APIs. If that changes, we'll need to find an alternative.
//    testImplementation 'com.google.android:android:4.1.1.4'
    // Use a stupidly old version of v4 because it's a jar. The newer support v4 packages are aars,
    // which we can't depend on in a standard Java test. Since our usage of v4 is pretty simple,
    // hopefully this will continue to work going forward.
//    testImplementation 'com.google.android:support-v4:r6'
//    testImplementation "com.android.support:support-annotations:${ANDROID_SUPPORT_VERSION}"
}